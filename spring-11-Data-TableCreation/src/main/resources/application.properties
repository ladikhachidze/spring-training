
# H2 - database
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.username=sa
#spring.datasource.password=
#
#
#spring.datasource.driver-class-name=org.h2.Driver
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#
#
#spring.jpa.show-sql=true
#spring.h2.console.enabled=true
#spring.h2.console.path=/cydeo


#Postgres DB
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=311314

#to be able to see in the console
spring.jpa.show-sql=true
# to know jpa what kind of platform we are working in this case we have postgresql, we can include both platforms
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# we can create table in the database 2 ways which is throw the schema.sql under resourses or directly from class
#spring.sql.init.mode=always


# DDL operation  create/ validate/ create-drop / update
spring.jpa.hibernate.ddl-auto=create

# data.sql entity's will be inserted into the table.
spring.jpa.defer-datasource-initialization=true



